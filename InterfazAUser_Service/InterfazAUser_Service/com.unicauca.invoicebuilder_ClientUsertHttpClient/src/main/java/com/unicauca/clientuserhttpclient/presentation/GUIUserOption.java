/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.unicauca.clientuserhttpclient.presentation;

import com.unicauca.clientuserhttpclient.access.RoleRestRepository;
import com.unicauca.clientuserhttpclient.access.UserRestRepository;
import com.unicauca.clientuserhttpclient.domain.entities.Role;
import com.unicauca.clientuserhttpclient.domain.entities.User;
import com.unicauca.clientuserhttpclient.domain.services.RoleService;
import com.unicauca.clientuserhttpclient.domain.services.UserService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JScrollPane;
//HEY: 2
/**
 *
 * @author Felipe Castro
 */
public class GUIUserOption extends javax.swing.JFrame {
    
    UserService service = new UserService(new UserRestRepository());
    RoleService rolService = new RoleService(new RoleRestRepository());
    
    DefaultListModel<String> model = new DefaultListModel<>();
    
    int opt;
    Long userId;
    
    /**
     * Creates new form GUIUser
     */
    public GUIUserOption(int opt) {
        this.opt = opt;
        initComponents();
        //JScrollPane scrollPane = new JScrollPane(listRoles);
        // Agrega el JScrollPane a tu contenedor (por ejemplo, un JPanel)
        //jPanel2.add(scrollPane);
        llenarListaRoles();
    }
    
    public GUIUserOption(int opt, Long userId) {
        //////////////////////////////////////HEY
        //SE PUEDEN PONER LA INFO DEL USUARIO QUE ESTABA ANTES PARA EDITAR
        this.opt = opt;
        this.userId = userId;
        initComponents();
        llenarListaRoles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listRoles = new javax.swing.JList<>();
        lbl2 = new javax.swing.JLabel();
        txtField1 = new javax.swing.JTextField();
        lbl3 = new javax.swing.JLabel();
        txtField2 = new javax.swing.JTextField();
        lbl4 = new javax.swing.JLabel();
        txtField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(550, 300));

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnSave);

        btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(btnClose);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.GridLayout(4, 2));

        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl1.setText("¿Que rol(es) desea agregar?:");
        lbl1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lbl1);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(258, 250));
        jScrollPane2.setRequestFocusEnabled(false);

        jScrollPane2.setViewportView(listRoles);

        jPanel2.add(jScrollPane2);

        lbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl2.setText("Nombre de usuario:");
        jPanel2.add(lbl2);

        txtField1.setName(""); // NOI18N
        txtField1.setPreferredSize(new java.awt.Dimension(200, 40));
        jPanel2.add(txtField1);

        lbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl3.setText("Email:");
        jPanel2.add(lbl3);
        jPanel2.add(txtField2);

        lbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl4.setText("Contraseña:");
        jPanel2.add(lbl4);

        txtField3.setPreferredSize(new java.awt.Dimension(200, 40));
        jPanel2.add(txtField3);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        ponerInterfazAnterior();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        //////////////////////////////////////HEY
        //SE PUEDE HACER VERIFICACION DE QUE HAY ALGUN USUARIO CON LOS MISMOS CAMPOS
        if(listRoles.getSelectedValuesList().isEmpty()){
            Messages.showMessageDialog("Por favor seleccione al menos un rol", "Atención");
            listRoles.requestFocus();
            return;
        }
        if(txtField1.getText().equals("")){
            Messages.showMessageDialog("Por favor digite un nombre se usuario", "Atención");
            txtField1.requestFocus();
            return;
        }
        if(txtField2.getText().equals("")){
            Messages.showMessageDialog("Por favor digite un email", "Atención");
            txtField2.requestFocus();
            return;
        }
        if(txtField3.getText().equals("")){
            Messages.showMessageDialog("Por favor digite una contraseña", "Atención");
            txtField3.requestFocus();
            return;
        }
        String nombre = txtField1.getText();
        String email = txtField2.getText();
        String contrasenia = txtField3.getText();
        
        User user = new User();
        
        user.setUserName(nombre);
        user.setUserEmail(email);
        user.setUserPassword(contrasenia);
        user.setUserRoles(sacarObjRolesSelecionados());
        
        if(opt == 0){
            
            service.create(user);
            Messages.showMessageDialog("Se ha creado el usuario correctamente", "Confirmación");
            
        }else if(opt == 1){
            
            service.edit(userId, user);
            Messages.showMessageDialog("Se ha editado el usuario correctamente", "Confirmación");
        }
        ponerInterfazAnterior();
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIUserOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIUserOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIUserOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIUserOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new GUIUserOption(-1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JList<String> listRoles;
    private javax.swing.JTextField txtField1;
    private javax.swing.JTextField txtField2;
    private javax.swing.JTextField txtField3;
    // End of variables declaration//GEN-END:variables

    //Funcion de llenado de lista
    private void llenarListaRoles(){
        List<Role> roles = rolService.findAll();
        listRoles.setModel(model);
        for (Role role : roles) {
            if(!role.getRoleName().equals("Super Administrador") && !role.getRoleName().equals("Visitante Registrado")){
                model.addElement(role.getRoleName());
            }
        }
    }
    
    private List<Role> sacarObjRolesSelecionados(){
        List<Role> roles = rolService.findAll();
        List<String> rolesSelected = listRoles.getSelectedValuesList();
        List<Role> objRoles = new ArrayList<>();
        for(String roleSelected : rolesSelected){
            for(Role role : roles){
                if(role.getRoleName().equals(roleSelected)){
                    objRoles.add(role);
                }
            }
        }
        return objRoles;
    }

    private void ponerInterfazAnterior(){
        this.setVisible(false);
        GUIUser guiUser = new GUIUser();
        guiUser.setVisible(true);
    }
    
    //Estados en los que se muestra la interfaz
    
}
